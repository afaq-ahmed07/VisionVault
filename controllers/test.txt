k mean clustering simple code :#task 2
import math
def euclidean_distance(a,b):
    return math.dist(a,b)

def k_mean_clustering(data):
    C1=(1,6)
    C2=(2,7)
    ans_from_c1=None
    ans_from_c2=None
    newc1=None
    newc2=None
    cluster1=[]
    cluster2=[]
    for i in range(0,100):
        newcluster1=[]
        newcluster2=[]
        for points in data:
            if(points == C1 or points ==C2):
                pass
            ans_from_c1=euclidean_distance(points,C1)
            ans_from_c2=euclidean_distance(points,C2)
            if(ans_from_c1<ans_from_c2 or ans_from_c1==ans_from_c2):
                newcluster1.append(points)
                newc1=((points[0]+C1[0])/2,(points[1]+C1[1])/2)
                c1=newc1
            else:
                newcluster2.append(points)
                newc2=((points[0]+C2[0])/2,(points[1]+C2[1])/2)
                c2=newc2
        if(cluster1==newcluster1 and cluster2==newcluster2):
            break
        else:
            cluster1=newcluster1
            cluster2=newcluster2
    return cluster1,cluster2

X=[(1,6),(2,7),(3,8),(4,9),(5,10)]
cluster1,cluster2=k_mean_clustering(X)


print("cluster1 contain :",cluster1)
print("cluster2 contain :",cluster2)
